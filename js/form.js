/* -------------------- –ù–ê–õ–ê–®–¢–£–ô -------------------- */
const API_URL =
  "https://script.google.com/macros/s/AKfycbzjnWePUt8msmFYDB43_pYR3yUZYMcVNw1ftMxxylyTQf72eKiCTsSfxg5chzdsyrOd/exec";

const TOTAL_SEATS = 10;

/* -------------------------------------------------- */

let seatsTaken = 0; // –ª—ñ—á–±–∞ –ª–æ–∫–∞–ª—å–Ω–æ (–¥–ª—è UX)

const form = document.getElementById("booking-form");
const successBox = document.getElementById("booking-success");
const seatsLeftEl = document.getElementById("seats-left");
const submitBtn = form.querySelector("button[type='submit']");
const fullMsg = document.getElementById("fully-booked-msg");

/* ---------- HELPERS ---------- */
function updateSeatsLeft() {
  const left = Math.max(0, TOTAL_SEATS - seatsTaken);
  seatsLeftEl.textContent = left;

  if (left === 0) {
    submitBtn.disabled = true;
    submitBtn.classList.add("opacity-50", "cursor-not-allowed");
    fullMsg.classList.remove("hidden");
  } else {
    submitBtn.disabled = false;
    submitBtn.classList.remove("opacity-50", "cursor-not-allowed");
    fullMsg.classList.add("hidden");
  }
}

function showError(el, msg = "") {
  el.classList.remove("hidden");
  if (msg) el.textContent = msg;
}
function hideError(el) {
  el.classList.add("hidden");
}

/* ---------- –í–ê–õ–Ü–î–ê–¶–Ü–Ø ---------- */
function validateName(input) {
  const err = document.getElementById("error-name");
  const ok = input.value.trim().length >= 2;
  ok ? hideError(err) : showError(err);
  input.classList.toggle("border-red-500", !ok);
  return ok;
}

function validatePhone(input) {
  const err = document.getElementById("error-phone");
  const ok = /^[+0-9\s()-]{7,20}$/.test(input.value.trim());
  ok ? hideError(err) : showError(err);
  input.classList.toggle("border-red-500", !ok);
  return ok;
}

function validateEmail(input) {
  const err = document.getElementById("error-email");
  const ok = /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(input.value.trim());
  ok ? hideError(err) : showError(err);
  input.classList.toggle("border-red-500", !ok);
  return ok;
}

function validateSeats() {
  const legend = document.getElementById("seats-legend");
  const selected = form.querySelector("input[name='seats']:checked");
  if (!selected) {
    legend.innerHTML =
      "–°–∫—ñ–ª—å–∫–∏ –º—ñ—Å—Ü—å? <span class='text-red-500'>‚Äî –æ–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é</span>";
    return false;
  }
  legend.textContent = "–°–∫—ñ–ª—å–∫–∏ –º—ñ—Å—Ü—å?";
  return true;
}

/* ---------- LIVE-–∑–Ω—è—Ç—Ç—è –ø–æ–º–∏–ª–∫–∏ seats ---------- */
form.querySelectorAll("input[name='seats']").forEach((r) =>
  r.addEventListener("change", () => {
    document.getElementById("seats-legend").textContent = "–°–∫—ñ–ª—å–∫–∏ –º—ñ—Å—Ü—å?";
  })
);

/* ---------- –í–Ü–î–ü–†–ê–í–ö–ê ---------- */
form.addEventListener("submit", async (e) => {
  e.preventDefault();

  const nameIn = form.elements["name"];
  const phoneIn = form.elements["phone"];
  const mailIn = form.elements["email"];
  const seatRad = form.querySelector("input[name='seats']:checked");

  const valid =
    validateName(nameIn) &&
    validatePhone(phoneIn) &&
    validateEmail(mailIn) &&
    validateSeats();

  if (!valid || !seatRad) return;

  /* –ª–æ–∫–∞–ª—å–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ª—ñ–º—ñ—Ç—É */
  const seatsReq = parseInt(seatRad.value, 10);
  if (seatsTaken + seatsReq > TOTAL_SEATS) {
    alert("–ù–∞ –∂–∞–ª—å, –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –≤—ñ–ª—å–Ω–∏—Ö –º—ñ—Å—Ü—å üò¢");
    return;
  }

  /* –≥–æ—Ç—É—î–º–æ payload */
  const payload = {
    name: nameIn.value.trim(),
    phone: phoneIn.value.trim(),
    email: mailIn.value.trim(),
    seats: seatsReq,
  };

  /* disable, —â–æ–± –Ω–µ —Å–ø–∞–º–∏–ª–∏ */
  submitBtn.disabled = true;
  submitBtn.textContent = "–ù–∞–¥—Å–∏–ª–∞—î–º–æ‚Ä¶";

  try {
    const res = await fetch(API_URL, {
      method: "POST",
      body: JSON.stringify(payload),
      headers: { "Content-Type": "application/json" },
    });
    const data = await res.json();

    if (data.success) {
      seatsTaken += seatsReq; // –æ–Ω–æ–≤–ª—é—î–º–æ –ª–æ–∫–∞–ª—å–Ω–æ
      updateSeatsLeft(); // ...—ñ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ

      form.reset();
      successBox.classList.remove("hidden", "opacity-0");
      successBox.classList.add("animate-fade-in");
      setTimeout(() => successBox.classList.add("opacity-0"), 4000);
    } else {
      alert(data.message || "–ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è");
    }
  } catch (err) {
    alert("–ù–µ –≤–¥–∞–ª–æ—Å—è –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –∑–∞—è–≤–∫—É. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.");
    console.error(err);
  } finally {
    submitBtn.disabled = false;
    submitBtn.textContent = "–ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –∑–∞—è–≤–∫—É";
  }
});

/* ---------- –ü–ï–†–®–ò–ô —Ä–µ–Ω–¥–µ—Ä ---------- */
updateSeatsLeft();

/* ---------- –û–¢–†–ò–ú–ê–ù–ù–Ø –ê–ö–¢–£–ê–õ–¨–ù–û–á –ö–Ü–õ–¨–ö–û–°–¢–Ü –ó–ê–ô–ù–Ø–¢–ò–• –ú–Ü–°–¶–¨ ---------- */
async function fetchTakenSeats() {
  try {
    const res = await fetch(API_URL);
    const data = await res.json();
    if (typeof data.taken === "number") {
      seatsTaken = data.taken;
      updateSeatsLeft();
    }
  } catch (err) {
    console.warn("–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –º—ñ—Å—Ü—å –∑ API:", err);
  }
}

// –í–∏–∫–ª–∏–∫ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ
fetchTakenSeats();
